@model EmpMngSys.Models.DepartModel

@{
    ViewBag.Title = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script type="text/javascript">

    //function SelectedIndexChanged()
    //{
    //    //Form post
    //    document.deptform.submit();
    //}
</script> 

<script>

    $(document).ready(function () {

        $("#ddldept").change(function () {

            
            SelectIndexChangedDDLDepartment();
        });



        //-------------Select Data on Dropdownlist select index changed --------------------//
        function SelectIndexChangedDDLDepartment()
        {
           
            var obj = {};
            
            obj.deptid = $("#ddldept option:selected").val();

            $.ajax({
                
                type: "POST",
                url: "/Depart/UpdateDept",
                data: JSON.stringify(obj),
                dataType: "json",
                contentType: "application/json",
                success: function (data) {
                
                    if (data != undefined && data != null) {
                  
                        //var data =  JSON.parse(data)
                        // console.log(JSON.stringify(data));
                        $("#txtdepartment").val(data[0].Department);

                        $("#txtcontact").val(data[0].Contact);
                        $("#txtmanager").val(data[0].Manager);
                       
                    }
                },  
                error: function (err) {  
                    alert('Data Not Found')
                }  
            });
            return false;
       
        }  


    });
</script> 

<h5>Update Department Details</h5>
@*@using (Html.BeginForm("Update", "Depart", FormMethod.Post, new { @id = "deptform", name = "deptform" }))  for getting select index changed data*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
     
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DeptId, Model.DepartmentList, "Please Select Department", new { @class = "form-control", @id = "ddldept" })   @*onchange = "SelectedIndexChanged()"*@

            </div>
        </div>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
              
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control", @id = "txtdepartment" } })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control", @id = "txtcontact" } })
                @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Manager, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Manager, new { htmlAttributes = new { @class = "form-control", @id = "txtmanager" } })
                @Html.ValidationMessageFor(model => model.Manager, "", new { @class = "text-danger" })
            </div>
        </div>

     

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-primary" />
                <input type="reset" value="Reset" class="btn btn-primary" />
            </div>
        </div>
    </div>
}


@{ 

    if (TempData["Message"] != null)
    {
        @Html.Raw(TempData["Message"])
    }

}

<script src="~/vendor/jquery/jquery.min.js"></script>
<script src="~/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
<script src="~/vendor/jquery-easing/jquery.easing.min.js"></script>
<script src="~/js/ruang-admin.min.js"></script>
<script src="~/vendor/chart.js/Chart.min.js"></script>
<script src="~/js/demo/chart-area-demo.js"></script>